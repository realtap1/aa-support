Types from schema.graphql from my subgraph

type PostCreated @entity(immutable: true) {
  id: Bytes!
  postId: BigInt!
  author: Bytes!
  text: String!
  fileCid: String!
  parentId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostDeleted @entity(immutable: true) {
  id: Bytes!
  postId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostLiked @entity(immutable: true) {
  id: Bytes!
  postId: BigInt!
  user: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostBoosted @entity(immutable: true) {
  id: Bytes!
  postId: BigInt!
  amount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type User @entity(immutable: false) {
  id: ID!
  username: String!
  avatarCID: String!
  bio: String!
  createdAt: BigInt!
  updatedAt: BigInt!

  # reverse lookups
  followers: [Follow!]! @derivedFrom(field: "target")
  following: [Follow!]! @derivedFrom(field: "follower")
}

type Follow @entity(immutable: false) {
  id: ID! # follower-target pair
  follower: User!
  target: User!
  createdAt: BigInt!
}

type Achievement @entity(immutable: true) {
  id: ID!
  name: String!
  rewardAmount: BigInt!
  enabled: Boolean!
}

type Goal @entity(immutable: true) {
  id: ID!
  name: String!
  rewardAmount: BigInt!
  periodStart: BigInt!
  periodEnd: BigInt!
  enabled: Boolean!
}

type AchievementClaim @entity(immutable: true) {
  id: ID!
  user: Bytes!
  achievement: Achievement!
  timestamp: BigInt!
}

type GoalClaim @entity(immutable: true) {
  id: ID!
  user: Bytes!
  goal: Goal!
  timestamp: BigInt!
}

type Tip @entity(immutable: true) {
  id: Bytes!
  from: Bytes!
  to: Bytes!
  amount: BigInt!
  tokenType: String!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenCreated @entity(immutable: true) {
  id: ID!
  tokenAddress: Bytes!
  creator: Bytes!
  createdAt: BigInt!
}


subgraph.yaml:

specVersion: 1.3.0
indexerHints:
  prune: auto

schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: PostRegistry
    network: opengpu
    source:
      address: "0x3137558F275c8Bfe1Abfa9aeA67731bC4c87A7eC"
      abi: PostRegistry
      startBlock: 4678399
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Post
      abis:
        - name: PostRegistry
          file: ./abis/PostRegistry.json
      eventHandlers:
        - event: PostCreated(indexed uint256,indexed address,string,string,uint256)
          handler: handlePostCreated
        - event: PostDeleted(indexed uint256)
          handler: handlePostDeleted
        - event: PostLiked(indexed uint256,indexed address)
          handler: handlePostLiked
        - event: PostBoosted(indexed uint256,uint256)
          handler: handlePostBoosted
      file: ./src/post-registry.ts

  - kind: ethereum/contract
    name: User
    network: opengpu
    source:
      address: "0x71AAB938F0BD52A7BD1FC802F17c7066214a59e7"
      abi: User
      startBlock: 4678399
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - UserProfile
      abis:
        - name: User
          file: ./abis/User.json
      eventHandlers:
        - event: ProfileCreated(indexed address,string,string,string)
          handler: handleProfileCreated
        - event: ProfileUpdated(indexed address,string,string,string)
          handler: handleProfileUpdated
      file: ./src/user.ts

  - kind: ethereum/contract
    name: SocialGraph
    network: opengpu
    source:
      address: "0x68CEe52A2926a49137B21e4c8F32Ada310BC6377"
      abi: SocialGraph
      startBlock: 4678399
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Follow
      abis:
        - name: SocialGraph
          file: ./abis/SocialGraph.json
      eventHandlers:
        - event: Followed(indexed address,indexed address)
          handler: handleFollowed
        - event: Unfollowed(indexed address,indexed address)
          handler: handleUnfollowed
      file: ./src/social-graph.ts

  - kind: ethereum/contract
    name: RewardVault
    network: opengpu
    source:
      address: "0x4FFfC036B3ff1F08e57C9C2ca4D09ED2c3e35C3c"
      abi: RewardVault
      startBlock: 4678399
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Achievement
        - Goal
        - AchievementClaim
        - GoalClaim
      abis:
        - name: RewardVault
          file: ./abis/RewardVault.json
      eventHandlers:
        - event: AchievementSet(uint256,string,uint256,bool)
          handler: handleAchievementSet
        - event: AchievementClaimed(indexed address,indexed uint256)
          handler: handleAchievementClaimed
        - event: GoalSet(uint256,string,uint256,uint256,uint256,bool)
          handler: handleGoalSet
        - event: GoalClaimed(indexed address,indexed uint256)
          handler: handleGoalClaimed
      file: ./src/reward-vault.ts

  - kind: ethereum/contract
    name: BoostManager
    network: opengpu
    source:
      address: "0x4569663de66df071426fbC89EeCE9343c79A9711"
      abi: BoostManager
      startBlock: 4678399
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Post
      abis:
        - name: BoostManager
          file: ./abis/BoostManager.json
      eventHandlers:
        - event: PostBoosted(indexed address,indexed uint256,uint256)
          handler: handlePostBoosted
      file: ./src/boost-manager.ts

  - kind: ethereum/contract
    name: Tipping
    network: opengpu
    source:
      address: "0x15685e8a4acDB684eAA276fFc6A097D9aEF3D0e9"
      abi: Tipping
      startBlock: 4678399
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Tip
      abis:
        - name: Tipping
          file: ./abis/Tipping.json
      eventHandlers:
        - event: Tipped(indexed address,indexed address,uint256,string,uint256)
          handler: handleTipped
      file: ./src/tipping.ts
  
  - kind: ethereum/contract
    name: ORC20TokenFactory
    network: opengpu
    source:
      address: "0x53De9029c9ee0ae11Ec3f7Bd781cd53bDE70E599"
      abi: ORC20TokenFactory
      startBlock: 4872442
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - ORC20Token
      abis:
        - name: ORC20TokenFactory
          file: ./abis/ORC20TokenFactory.json
      eventHandlers:
        - event: TokenCreated(indexed address,indexed address)
          handler: handleTokenCreated
      file: ./src/orc20-token-factory.ts



